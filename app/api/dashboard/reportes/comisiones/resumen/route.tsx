import { NextRequest, NextResponse } from "next/server";
import dbQuery from "@/lib/dbQuery";


export async function GET(request: NextRequest) {
  
  const { searchParams } = new URL(request.url); Â  
  const idUsuario = searchParams.get('idUsuario');
  const perfil = searchParams.get('perfil');
  const fecha_inicio = searchParams.get('fInicio');
  const fecha_fin = searchParams.get('fFin');
  let where="";

  if (perfil == "11")
    {
        where += ` and aa.id_usuario='${idUsuario}'`;
    }

  let query = `SELECT NOMBRE_ASESOR,SUM(MONTO_PRIMARIO) AS GENERADO,SUM(PAGADO) AS PAGADO,SUM(SALDO) AS SALDO,USUARIO
                --,'2024-06-25' AS FECHA_INICIO,'2024-07-15' AS FECHA_FIN
                FROM (
                  SELECT CONCAT(C.NOMBRE,' ',C.AP_PATERNO,' ',COALESCE(C.AP_MATERNO,'')) AS NOMBRE_ASESOR
                  ,A.MONTO_PRIMARIO,CASE WHEN A.BND_PAGADO_PRIMARIO=TRUE THEN (SELECT COALESCE(SUM(COALESCE(MONTO,0)),0) FROM COMISIONES_PAGOS WHERE ID_CONTRATO=A.ID_CONTRATO AND NO_COMISION=A.NO_COMISION) ELSE 0 END AS PAGADO
                  ,A.MONTO_PRIMARIO-CASE WHEN A.BND_PAGADO_PRIMARIO=TRUE THEN (SELECT COALESCE(SUM(COALESCE(MONTO,0)),0) FROM COMISIONES_PAGOS WHERE ID_CONTRATO=A.ID_CONTRATO AND NO_COMISION=A.NO_COMISION) ELSE 0 END AS SALDO
                  ,A.ASESOR_PRIMARIO AS USUARIO
                  FROM COMISIONES A
                  INNER JOIN (SELECT MAX(FECHA_MOVIMIENTO) AS FECHA_MOVIMIENTO,ID_TIPO_MOVIMIENTO,ID_CONTRATO,NO_PAGO FROM MOVIMIENTOS_DETALLE WHERE ID_TIPO_MOVIMIENTO=3 GROUP BY ID_TIPO_MOVIMIENTO,ID_CONTRATO,NO_PAGO
                        --UNION ALL
                        --SELECT MAX(FECHA_MOVIMIENTO) AS FECHA_MOVIMIENTO,ID_TIPO_MOVIMIENTO,ID_CONTRATO,NO_PAGO FROM MOVIMIENTOS_DETALLE_CANCELADOS WHERE ID_TIPO_MOVIMIENTO=3 GROUP BY ID_TIPO_MOVIMIENTO,ID_CONTRATO,NO_PAGO
                        ) B ON B.ID_CONTRATO=A.ID_CONTRATO AND B.NO_PAGO=A.NO_COMISION AND B.ID_TIPO_MOVIMIENTO=3
                  INNER JOIN CAT_USUARIOS C ON C.ID_USUARIO=A.ASESOR_PRIMARIO
                  INNER JOIN CONTRATOS_TERRENOS D ON D.ID_CONTRATO=A.ID_CONTRATO
                  WHERE A.BND_ACTIVO=TRUE
                  AND A.BND_MENSUALIDAD_PAGADA=TRUE
                  AND A.BND_CONTRATO_FIRMADO=TRUE
                    AND COALESCE(BND_BLOQUEO, FALSE) = FALSE
                  AND B.FECHA_MOVIMIENTO BETWEEN '${fecha_inicio}' AND '${fecha_fin}  23:59:59'
                  UNION ALL
                  SELECT CONCAT(C.NOMBRE,' ',C.AP_PATERNO,' ',COALESCE(C.AP_MATERNO,'')) AS NOMBRE_ASESOR
                  ,A.MONTO_SECUNDARIO,CASE WHEN A.BND_PAGADO_SECUNDARIO=TRUE THEN (SELECT COALESCE(SUM(COALESCE(MONTO,0)),0) FROM COMISIONES_PAGOS WHERE ID_CONTRATO=A.ID_CONTRATO AND NO_COMISION=A.NO_COMISION) ELSE 0 END AS PAGADO
                  ,A.MONTO_SECUNDARIO-CASE WHEN A.BND_PAGADO_SECUNDARIO=TRUE THEN (SELECT COALESCE(SUM(COALESCE(MONTO,0)),0) FROM COMISIONES_PAGOS WHERE ID_CONTRATO=A.ID_CONTRATO AND NO_COMISION=A.NO_COMISION) ELSE 0 END AS SALDO
                  ,A.ASESOR_SECUNDARIO AS USUARIO
                  FROM COMISIONES A
                  INNER JOIN (SELECT MAX(FECHA_MOVIMIENTO) AS FECHA_MOVIMIENTO,ID_TIPO_MOVIMIENTO,ID_CONTRATO,NO_PAGO FROM MOVIMIENTOS_DETALLE WHERE ID_TIPO_MOVIMIENTO=3 GROUP BY ID_TIPO_MOVIMIENTO,ID_CONTRATO,NO_PAGO
                        --UNION ALL
                        --SELECT MAX(FECHA_MOVIMIENTO) AS FECHA_MOVIMIENTO,ID_TIPO_MOVIMIENTO,ID_CONTRATO,NO_PAGO FROM MOVIMIENTOS_DETALLE_CANCELADOS WHERE ID_TIPO_MOVIMIENTO=3 GROUP BY ID_TIPO_MOVIMIENTO,ID_CONTRATO,NO_PAGO
                        ) B ON B.ID_CONTRATO=A.ID_CONTRATO AND B.NO_PAGO=A.NO_COMISION AND B.ID_TIPO_MOVIMIENTO=3
                  INNER JOIN CAT_USUARIOS C ON C.ID_USUARIO=A.ASESOR_SECUNDARIO
                  INNER JOIN CONTRATOS_TERRENOS D ON D.ID_CONTRATO=A.ID_CONTRATO
                  WHERE A.BND_ACTIVO=TRUE
                  AND A.BND_MENSUALIDAD_PAGADA=TRUE
                  AND A.BND_CONTRATO_FIRMADO=TRUE
                    AND COALESCE(BND_BLOQUEO, FALSE) = FALSE
                  AND B.FECHA_MOVIMIENTO BETWEEN '${fecha_inicio}' AND '${fecha_fin}  23:59:59'
                )AA WHERE 1=1  ${where} 
                GROUP BY NOMBRE_ASESOR,USUARIO
             `;
  const tempData = await dbQuery(query);

  return NextResponse.json(tempData.rows, { status: 200 });
  //return NextResponse.json(tempData.rows, { status: 200 });
}
